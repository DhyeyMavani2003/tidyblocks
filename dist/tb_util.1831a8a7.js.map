{"version":3,"sources":["utilities/tb_util.js"],"names":["initializeDisplay","nodeId","state","document","getElementById","style","display","blockToText","node","blocklyDiv","demoWorkspace","setUpBlockly","Blockly","inject","media","toolbox","horizontalLayout","scrollbars","theme","Themes","Tidy","runCode","JavaScript","INFINITE_LOOP_TRAP","code","workspaceToCode","includes","console","log","splitdf","split","dfArray","eval","toArray","innerHTML","json2table","addEventListener","event"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA,SAASA,iBAAT,GAA6B;AAC3B,0BAA4B,CAAC,CAAC,YAAD,EAAe,MAAf,CAAD,EACC,CAAC,cAAD,EAAiB,OAAjB,CADD,CAA5B,0BACyD;AAAA;AAAA,QAD/CC,MAC+C;AAAA,QADvCC,KACuC;;AACvDC,IAAAA,QAAQ,CAACC,cAAT,CAAwBH,MAAxB,EAAgCI,KAAhC,CAAsCC,OAAtC,GAAgDJ,KAAhD;AACD;AACF,EAED;AACA;AACA;;;AACA,SAASK,WAAT,GAAuB;AACrB,4BAAmB,CAAC,YAAD,EAAe,cAAf,CAAnB,6BAAmD;AAA9C,QAAIN,MAAM,aAAV;AACH,QAAMO,IAAI,GAAGL,QAAQ,CAACC,cAAT,CAAwBH,MAAxB,CAAb;;AACA,QAAIO,IAAI,CAACH,KAAL,CAAWC,OAAX,KAAuB,MAA3B,EAAmC;AACjCE,MAAAA,IAAI,CAACH,KAAL,CAAWC,OAAX,GAAqB,OAArB;AACD,KAFD,MAEO;AACLE,MAAAA,IAAI,CAACH,KAAL,CAAWC,OAAX,GAAqB,MAArB;AACD;AACF;AACF,EAED;AACA;AACA;;;AACA,IAAIG,UAAU,GAAG,IAAjB;AACA,IAAIC,aAAa,GAAG,IAApB;;AAEA,SAASC,YAAT,GAAwB;AACtBF,EAAAA,UAAU,GAAGN,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAb;AACAM,EAAAA,aAAa,GAAGE,OAAO,CAACC,MAAR,CACdJ,UADc,EAEd;AACEK,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,OAAO,EAAEZ,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAFX;AAGEY,IAAAA,gBAAgB,EAAE,KAHpB;AAIEC,IAAAA,UAAU,EAAE,KAJd;AAKEC,IAAAA,KAAK,EAAEN,OAAO,CAACO,MAAR,CAAeC;AALxB,GAFc,CAAhB;AAUD,EAED;AACA;AACA;;;AAEA,SAASC,OAAT,GAAmB;AACjB;AACAT,EAAAA,OAAO,CAACU,UAAR,CAAmBC,kBAAnB,GAAwC,IAAxC;AACA,MAAIC,IAAI,GAAGZ,OAAO,CAACU,UAAR,CAAmBG,eAAnB,CAAmCf,aAAnC,CAAX;;AACA,MAAIc,IAAI,CAACE,QAAL,CAAc,MAAd,CAAJ,EAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAK,IAAAA,OAAO,GAAGL,IAAI,CAACM,KAAL,CAAW,OAAX,EAAoB,CAApB,CAAV;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;;AACA,QAAME,QAAO,GAAGC,IAAI,CAACH,OAAO,CAAC,CAAD,CAAR,CAAJ,CAAiBI,OAAjB,EAAhB;;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAC,IAAAA,IAAI,CAACH,OAAO,CAAC,CAAD,CAAR,CAAJ;AACD,GAPD,MAOO;AACLF,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAO,IAAAA,OAAO,GAAGC,IAAI,CAACR,IAAD,CAAJ,CAAWS,OAAX,EAAV;AACA9B,IAAAA,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2C8B,SAA3C,GAAuDC,UAAU,CAACJ,OAAD,CAAjE;AACD;AAEF,EAED;AACA;AACA;;;AACA5B,QAAQ,CAACiC,gBAAT,CAA0B,kBAA1B,EAA8C,UAACC,KAAD,EAAW;AACvDrC,EAAAA,iBAAiB;AACjBW,EAAAA,YAAY;AACb,CAHD","file":"tb_util.1831a8a7.js","sourceRoot":"..","sourcesContent":["//\n// Set the display property of the two input panes.\n//\nfunction initializeDisplay() {\n  for (let [nodeId, state] of [['codeOutput', 'none'],\n                               ['blockDisplay', 'block']]) {\n    document.getElementById(nodeId).style.display = state\n  }\n}\n\n//\n// Toggle between block input and text input panes.\n//\nfunction blockToText() {\n  for (let nodeId of ['codeOutput', 'blockDisplay']) {\n    const node = document.getElementById(nodeId)\n    if (node.style.display === 'none') {\n      node.style.display = 'block'\n    } else {\n      node.style.display = 'none'\n    }\n  }\n}\n\n//\n// Set up Blockly display.\n//\nlet blocklyDiv = null\nlet demoWorkspace = null\n\nfunction setUpBlockly() {\n  blocklyDiv = document.getElementById('blockDisplay')\n  demoWorkspace = Blockly.inject(\n    blocklyDiv,\n    {\n      media: 'media/',\n      toolbox: document.getElementById('toolbox'),\n      horizontalLayout: false,\n      scrollbars: false, \n      theme: Blockly.Themes.Tidy\n    }\n  )\n}\n\n//\n// Run the code corresponding to the user's blocks.\n//\n\nfunction runCode() {\n  // run code and show in field\n  Blockly.JavaScript.INFINITE_LOOP_TRAP = null;\n  var code = Blockly.JavaScript.workspaceToCode(demoWorkspace);\n  if (code.includes(\"vega\")) {\n    console.log(code)\n    splitdf = code.split(\"SPLIT\", 2)\n    console.log(splitdf)\n    const dfArray = eval(splitdf[0]).toArray()\n    console.log(dfArray)\n    eval(splitdf[1])\n  } else {\n    console.log(code)\n    dfArray = eval(code).toArray()\n    document.getElementById('dataTableOutput').innerHTML = json2table(dfArray);\n  }\n  \n}\n\n//\n// Setup after DOM has initialized.\n//\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n  initializeDisplay()\n  setUpBlockly()\n})\n"]}